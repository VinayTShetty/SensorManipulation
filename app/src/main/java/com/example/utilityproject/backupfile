package com.example.utilityproject;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

import java.util.Calendar;
import java.util.Date;

public class MainActivity extends AppCompatActivity {

    TextView demoDate;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.testing_demo);
        demoDate = (TextView) findViewById(R.id.textView);

        Date mDate = DateUtils.parse("1611059610", DateUtils.dateFormatStandard_yyyy_MM_dd_HH_mm_ss); //1579437205
        long previousTs = 0;
        Date mDatePrevious = DateUtils.parse("1579437205", DateUtils.dateFormatStandard_yyyy_MM_dd_HH_mm_ss);  //1611059610
        previousTs = mDatePrevious.getTime();
        setTimeTextVisibility(mDate.getTime(), previousTs, demoDate);


        System.out.println("TimeStmap= "+getTimeStamp());

    }


    private void setTimeTextVisibility(long epochTime1, long epochTime2, TextView timeText) {
        if (epochTime2 == 0) {
            Calendar calSendTime = Calendar.getInstance();
            Calendar now = Calendar.getInstance();
            calSendTime.setTimeInMillis(epochTime1);
            timeText.setVisibility(View.VISIBLE);
            if (now.get(Calendar.DATE) == calSendTime.get(Calendar.DATE) &&
                    now.get(Calendar.MONTH) == calSendTime.get(Calendar.MONTH) &&
                    now.get(Calendar.DAY_OF_MONTH) == calSendTime.get(Calendar.DAY_OF_MONTH)) {
                timeText.setText("Today");
            } else if (now.get(Calendar.DATE) - calSendTime.get(Calendar.DATE) == 1 &&
                    now.get(Calendar.MONTH) == calSendTime.get(Calendar.MONTH) &&
                    now.get(Calendar.DAY_OF_MONTH) == calSendTime.get(Calendar.DAY_OF_MONTH)) {
                timeText.setText("Yesterday");
            } else {
                timeText.setText(DateUtils.formatDate(calSendTime.getTime(), DateUtils.dateFormatYearMonthDay));
            }
        } else {
            Calendar cal1 = Calendar.getInstance();
            Calendar cal2 = Calendar.getInstance();
            cal1.setTimeInMillis(epochTime1);
            cal2.setTimeInMillis(epochTime2);

           /* boolean sameDay = cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                    cal1.get(Calendar.MONTH) == cal2.get(Calendar.MONTH) &&
                    cal1.get(Calendar.DAY_OF_MONTH) == cal2.get(Calendar.DAY_OF_MONTH);

            if (sameDay) {
                timeText.setVisibility(View.GONE);
                timeText.setText("");
            }*/ if (true){
                timeText.setVisibility(View.VISIBLE);
//                    timeText.setText(mDateFormatDisplay.format(new Date(ts1)));
                Calendar now = Calendar.getInstance();
                if (now.get(Calendar.DATE) == cal1.get(Calendar.DATE) &&
                        now.get(Calendar.MONTH) == cal1.get(Calendar.MONTH) && now.get(Calendar.DAY_OF_MONTH) == cal1.get(Calendar.DAY_OF_MONTH)) {
                    timeText.setText("Today");
                } else if (now.get(Calendar.DATE) - cal1.get(Calendar.DATE) == 1 &&
                        now.get(Calendar.MONTH) == cal1.get(Calendar.MONTH) && now.get(Calendar.DAY_OF_MONTH) == cal1.get(Calendar.DAY_OF_MONTH)) {
                    timeText.setText("Yesterday");
                } else {
                    timeText.setText(DateUtils.formatDate(cal1.getTime(), DateUtils.dateFormatYearMonthDay));
                }
            }
        }
    }

    public static String getTimeStamp(){
        Long tsLong = System.currentTimeMillis();
        String ts = tsLong.toString();
        return  ts;
    }

}
----------------------------------------------------------------------------------------------------------------------------------
package com.example.utilityproject;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class DateUtils {
    public static final String dateFormatYearMonthDay = "yyyy-MM-dd";
    public static final String dateFormatStandard_yyyy_MM_dd_HH_mm_ss= "yyyy-MM-dd HH:mm:ss";
    public static String formatDate(Date date, String inputDateFormat){
        DateFormat dateFormat = new SimpleDateFormat(inputDateFormat, Locale.getDefault());
        return dateFormat.format(date);
    }
    public static Date parse(String timeStamp, String inputDateFormat) {

        SimpleDateFormat formatter = new SimpleDateFormat(dateFormatStandard_yyyy_MM_dd_HH_mm_ss);
        String dateString = formatter.format(new Date(Long.parseLong(timeStamp)));

        DateFormat df = new SimpleDateFormat(inputDateFormat, Locale.getDefault());
        Date date = new Date();
        try {
            date = df.parse(dateString);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return date;
    }
}
